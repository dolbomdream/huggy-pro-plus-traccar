name: Build Installers

env:
  DOCKERHUB_REPOSITORY: dbdream.azurecr.io/dbdream/huggy-pro-plus-traccar

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version"
        required: true
        default: "preview"

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        os: [alpine]
        # os: [alpine, debian, ubuntu]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      - run: git checkout ${{ github.ref_name }}
        working-directory: ./traccar-web
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 18
          cache: gradle
      - run: ./gradlew build
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: traccar-web/package-lock.json
      - run: npm ci && npm run build
        working-directory: ./traccar-web
      - run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install libgcc-s1:i386 libstdc++6:i386
          sudo apt-get install innoextract makeself wine32 s3cmd
      - name: Build installers
        working-directory: ./setup
        run: |
          wget -q http://files.jrsoftware.org/is/5/isetup-5.5.6.exe
          wget -q https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.2+13/OpenJDK21U-jdk_x64_windows_hotspot_21.0.2_13.zip
          wget -q https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.2+13/OpenJDK21U-jdk_x64_linux_hotspot_21.0.2_13.tar.gz
          wget -q https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.2+13/OpenJDK21U-jdk_aarch64_linux_hotspot_21.0.2_13.tar.gz
          ./package.sh ${{ github.event.inputs.version }} other

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.AZURE_URL }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Set environment DOCKERHUB_IMAGE_TAGS on master
        if: github.ref == 'refs/heads/master' && matrix.os == 'alpine'
        run: echo "DOCKERHUB_IMAGE_TAGS=$DOCKERHUB_REPOSITORY:${{ github.event.inputs.version }}" >> $GITHUB_ENV

      - name: Set environment DOCKERHUB_IMAGE_PLATFORMS
        run: |
          _DOCKERHUB_IMAGE_PLATFORMS="linux/amd64"
          if [ "${{ matrix.os }}" == "debian" ]; then
            _DOCKERHUB_IMAGE_PLATFORMS+=",linux/arm64"
          elif [ "${{ matrix.os }}" == "ubuntu" ]; then
            _DOCKERHUB_IMAGE_PLATFORMS+=",linux/arm/v7,linux/arm64"
          fi
          echo "DOCKERHUB_IMAGE_PLATFORMS=$_DOCKERHUB_IMAGE_PLATFORMS" >> $GITHUB_ENV

      - name: Build and push
        if: env.DOCKERHUB_IMAGE_TAGS != ''
        uses: docker/build-push-action@v4
        with:
          context: .
          build-args: TRACCAR_VERSION=${{ github.event.inputs.version }}
          file: custom/docker/Dockerfile.${{ matrix.os }}
          tags: ${{ env.DOCKERHUB_IMAGE_TAGS }}
          platforms: ${{ env.DOCKERHUB_IMAGE_PLATFORMS }}
          push: true
